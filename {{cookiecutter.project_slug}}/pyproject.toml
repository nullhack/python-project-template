[project]
name = "{{cookiecutter.project_slug}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.project_short_description}}"
readme = "README.md"
requires-python = ">=3.13"
license = { file = "LICENSE" }
authors = [
    { name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}" }
]
maintainers = [
    { name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}" }
]
dependencies = []

[project.urls]
Repository = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_slug}}"
Documentation = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_slug}}/tree/main/docs/api/"

[project.optional-dependencies]
dev = [
    "mkdocs>=1.6.1",
    "mkdocs-awesome-pages-plugin>=2.10.1",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-material>=9.6.11",
    "mkdocstrings[python]>=0.29.1",
    "pytest>=8.3.5",
    "pytest-bdd>=8.1.0",
    "pytest-cov>=6.1.1",
    "pytest-html>=4.1.1",
    "ruff>=0.11.5",
    "taskipy>=1.14.1",
]

[tool.setuptools]
packages = ["{{cookiecutter.package_name}}"]

[tool.ruff.lint]
ignore = []
select = [
  "A", 
  "ANN", 
  "ASYNC", 
  "B", 
  "C4", 
  "C9", 
  "D", 
  "DTZ", 
  "E", 
  "ERA", 
  "F", 
  "FURB", 
  "G", 
  "I", 
  "ICN", 
  "LOG", 
  "N", 
  "NPY", 
  "PD", 
  "PT", 
  "PTH", 
  "R", 
  "RUF", 
  "S", 
  "SIM", 
  "T20", 
  "TD", 
  "W",
]
preview = true
mccabe.max-complexity = 10
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
--maxfail=1 \
--color=yes \
--cov={{cookiecutter.package_name}} \
--html=docs/pytest_report.html \
--self-contained-html \
--cov-fail-under={{cookiecutter.minimum_coverage}} \
--cov-report term-missing \
--cov-report html:docs/cov-report \
--doctest-modules \
--cov-config=pyproject.toml"""
testpaths = [
    "tests",
    "{{cookiecutter.package_name}}"
]
python_files = ["*_test.py"]
python_functions = ["test_*"]
render_collapsed = true
bdd_features_base_dir = "bdd-features"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
    ]

[tool.taskipy.tasks]
run = "python -m {{cookiecutter.package_name}}.{{cookiecutter.module_name}}"
test = "pytest"
ruff-check = "ruff check **/*.py --fix"
ruff-format = "ruff format **/*.py"
lint = "task ruff-check && task ruff-format"
doc = "mkdocs serve --use-directory-urls -f docs/mkdocs.yaml"
doc-html = "mkdocs build --no-directory-urls -f docs/mkdocs.yaml"
doc-publish = """mkdocs gh-deploy \
--config-file docs/mkdocs.yaml \
--no-directory-urls \
--remote-branch docs"""
